# import * from './generated/prisma-client/prisma.graphql'

type Message {
  flag: String
  text: String
}

type Mutation {
  createVideoProject(data: VideoProjectCreateInput!): VideoProject!
  updateVideoProject(data: VideoProjectUpdateInput!, where: VideoProjectWhereUniqueInput!): VideoProject
  deleteVideoProject(id: ID!): VideoProject!

  createVideoUnit(data: VideoUnitCreateInput!): VideoUnit!
  updateVideoUnit(data: VideoUnitUpdateInput!, where: VideoUnitWhereUniqueInput!): VideoUnit!
  deleteVideoUnit(id: ID!): VideoUnit!

  createVideoFile(data: VideoFileCreateInput!): VideoFile!
  updateVideoFile(data: VideoFileUpdateInput!, where: VideoFileWhereUniqueInput!): VideoFile
  deleteVideoFile(id: ID!): VideoFile

  createThumbnail(data: ThumbnailCreateInput!): Thumbnail!
  updateThumbnail(data: ThumbnailUpdateInput!, where: ThumbnailWhereUniqueInput!): Thumbnail
  deleteThumbnail(id: ID!): Thumbnail

  createImageFile(data: ImageFileCreateInput!): ImageFile!
  updateImageFile(data: ImageFileUpdateInput!, where: ImageFileWhereUniqueInput!): ImageFile
  deleteImageFile(id: ID!): ImageFile

  createSupportFile(data: SupportFileCreateInput!): SupportFile!
  updateSupportFile(data: SupportFileUpdateInput!, where: SupportFileWhereUniqueInput!): SupportFile!
  deleteSupportFile(id: ID!): SupportFile!

  createCategory(data: CategoryCreateInput!): Category!
  updateCategory(data: CategoryUpdateInput!, where: CategoryWhereUniqueInput!): Category
  deleteCategory(id: ID!): Category

  createTag(data: TagCreateInput!): Tag!
  updateTag(data: TagUpdateInput!, where: TagWhereUniqueInput!): Tag
  deleteTag(id: ID!): Tag

  createVideoUse(name: String!): VideoUse!
  updateVideoUse(data: VideoUseUpdateInput!, where: VideoUseWhereUniqueInput!): VideoUse
  deleteVideoUse(id: ID!): VideoUse

  createImageUse(name: String!): ImageUse!
  updateImageUse(data: ImageUseUpdateInput!, where: ImageUseWhereUniqueInput!): ImageUse
  deleteImageUse(id: ID!): ImageUse

  createDimensions(height: Int, width: Int): Dimensions!
  updateDimensions(data: DimensionsUpdateInput!, where: DimensionsWhereUniqueInput!): Dimensions
  deleteDimensions(id: ID!): Dimensions

  createVideoStream(data: VideoStreamCreateInput!): VideoStream!
  updateVideoStream(data: VideoStreamUpdateInput!, where: VideoStreamWhereUniqueInput!): VideoStream
  deleteVideoStream(id: ID!): VideoStream

  createLanguage(data: LanguageCreateInput!): Language!
  updateLanguage(data: LanguageUpdateInput!, where: LanguageWhereUniqueInput!): Language
  createTeam(name: String!, organization: String!): Team!
  signOut: String!
  signUp(data: UserCreateInput): Message
  signIn(email: String!, password: String!): User!
  googleSignin(token: String!): User
  updatePassword(
    tempToken: String!
    password: String!
    confirmPassword: String!
  ): User!
  requestAccountAction(
    email: String!
    subject: String!
    body: String!
    link: String!
    reply: String!
    page: String!
  ): Message
}

type Query {
  videoProjects(where: VideoProjectWhereInput, orderBy: VideoProjectOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [VideoProject]!
  videoProject(id: ID!): VideoProject

  videoUnits(where: VideoUnitWhereInput, orderBy: VideoUnitOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [VideoUnit]!
  videoUnit(id: ID!): VideoUnit

  videoFiles(where: VideoFileWhereInput, orderBy: VideoFileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [VideoFile]!
  videoFile(id: ID!): VideoFile

  thumbnails(where: ThumbnailWhereInput, orderBy: ThumbnailOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Thumbnail]!
  thumbnail(id: ID!): Thumbnail

  imageFiles(where: ImageFileWhereInput, orderBy: ImageFileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ImageFile]!
  imageFile(id: ID!): ImageFile

  supportFiles(where: SupportFileWhereInput, orderBy: SupportFileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [SupportFile]!
  supportFile(id: ID!): SupportFile

  teams(where: TeamWhereInput, orderBy: TeamOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Team]!
  team(id: ID!): Team
  authenticatedUser: User

  languages(where: LanguageWhereInput, orderBy: LanguageOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Language]!
  language(id: ID!): Language

  categories(where: CategoryWhereInput, orderBy: CategoryOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Category]!
  category(id: ID!): Category

  tags(where: TagWhereInput, orderBy: TagOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Tag]!
  tag(id: ID!): Tag

  videoUses(where: VideoUseWhereInput, orderBy: VideoUseOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [VideoUse]!
  videoUse(id: ID!): VideoUse

  imageUses(where: ImageUseWhereInput, orderBy: ImageUseOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ImageUse]!
  imageUse(id: ID!): ImageUse

  dimensionses(where: DimensionsWhereInput, orderBy: DimensionsOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Dimensions]!
  dimensions(id: ID!): Dimensions

  videoStreams(where: VideoStreamWhereInput, orderBy: VideoStreamOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [VideoStream]!
  videoStream(id: ID!): VideoStream
}

# Redefine to not reveal sensitive user fields
type User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  jobTitle: String
  country: String
  city: String
  howHeard: String
  permissions: [Permission!]!
  team: Team
}
